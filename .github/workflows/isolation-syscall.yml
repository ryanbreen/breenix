name: Test Syscalls 400/401

on:
  push:
    branches: [ main, "*" ]
  pull_request:
    branches: [ main ]

jobs:
  test-syscalls:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install Rust toolchain
      uses: dtolnay/rust-toolchain@nightly
      with:
        components: rust-src, llvm-tools-preview
    
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y qemu-system-x86 nasm
    
    - name: Add LLVM tools to PATH
      run: |
        echo "$(rustc --print sysroot)/lib/rustlib/x86_64-unknown-linux-gnu/bin" >> $GITHUB_PATH
    
    - name: Build userspace tests
      run: |
        cd userspace/tests
        ./build.sh
        
    - name: Build kernel with testing features
      run: cargo build --release --features testing
    
    - name: Build disk image
      run: |
        cargo build --release --bin qemu-uefi --features testing
        # Copy disk image to expected location
        mkdir -p target/x86_64-unknown-none/release/
        cp $(find target/release/build -name "breenix-uefi.img" -type f | head -1) target/x86_64-unknown-none/release/breenix-uefi.img
    
    - name: Run kernel and capture logs
      run: |
        echo "=== Pre-run checks ==="
        ls -la target/x86_64-unknown-none/release/breenix-uefi.img || echo "Image not found"
        echo "=== Starting QEMU ==="
        timeout 45s qemu-system-x86_64 \
          -machine accel=tcg \
          -serial stdio \
          -display none \
          -no-reboot \
          -no-shutdown \
          -m 256M \
          -smp 1 \
          -cpu qemu64 \
          -drive format=raw,file=target/x86_64-unknown-none/release/breenix-uefi.img \
          > qemu.log 2>&1 || true
        echo "=== QEMU finished, exit code: $? ==="
        echo "=== Log file size: $(wc -c < qemu.log) bytes ==="
        echo "=== First 10 lines of log ==="
        head -10 qemu.log || echo "No log content"
        echo "=== Last 10 lines of log ==="
        tail -10 qemu.log || echo "No log content"
        cp qemu.log test_output.log
    
    - name: Verify syscall 400 executed
      run: |
        if ! grep -q "SYSCALL entry: rax=400" test_output.log; then
          echo "ERROR: Syscall 400 not executed"
          exit 1
        fi
        echo "✓ Syscall 400 executed"
    
    - name: Verify share_page handler called
      run: |
        if ! grep -q "TEST: share_page(0xdeadbeef)" test_output.log; then
          echo "ERROR: share_page handler not called correctly"
          exit 1
        fi
        echo "✓ share_page handler called with correct value"
    
    - name: Verify syscall 401 executed
      run: |
        if ! grep -q "SYSCALL entry: rax=401" test_output.log; then
          echo "ERROR: Syscall 401 not executed"
          exit 1
        fi
        echo "✓ Syscall 401 executed"
    
    - name: Verify get_page handler called
      run: |
        if ! grep -q "TEST: get_page -> 0xdeadbeef" test_output.log; then
          echo "ERROR: get_page handler not called correctly"
          exit 1
        fi
        echo "✓ get_page handler returned correct value"
    
    - name: Verify test process exited successfully
      run: |
        if ! grep -q "Process 3 (thread 3) exited with code 0" test_output.log; then
          echo "WARNING: Exact exit message not found, checking alternatives..."
          if grep -q "syscall_test exited 0" test_output.log; then
            echo "✓ Found alternative success message"
          else
            echo "ERROR: Test process did not exit successfully"
            exit 1
          fi
        else
          echo "✓ Test process exited with code 0"
        fi
    
    - name: Verify no unknown syscall errors for 400/401
      run: |
        if grep -E "Unknown syscall.*(400|401)" test_output.log; then
          echo "ERROR: Found unknown syscall errors for 400/401"
          exit 1
        fi
        echo "✓ No unknown syscall errors for 400/401"
    
    - name: Check for IRET to PID 3
      if: failure()
      run: |
        echo "=== Checking if process reached userspace ==="
        if grep -q "IRET to pid=3" test_output.log; then
          echo "✓ Process 3 reached userspace (IRET executed)"
          echo "=== IRET lines ==="
          grep "IRET to pid=3" test_output.log
        else
          echo "✗ Process 3 never reached userspace"
          echo "=== Process creation ==="
          grep -A5 "Created syscall_test process" test_output.log || true
        fi

    - name: Check for exceptions
      if: failure()
      run: |
        echo "=== Checking for exceptions ==="
        grep -E "DOUBLE FAULT|PAGE-FAULT|GENERAL PROTECTION|INVALID OPCODE" test_output.log || echo "No exceptions found"

    - name: Upload test logs
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: test-logs
        path: |
          test_output.log
          logs/*.log