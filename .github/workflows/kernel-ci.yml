name: kernel-ci

on:
  pull_request:
  push:
    branches: [ "**" ]

jobs:
  ring3-smoke:
    runs-on: ubuntu-22.04
    env:
      RUST_BACKTRACE: full
    timeout-minutes: 45
    steps:
      - uses: actions/checkout@v4

      - name: Set up Rust (nightly)
        uses: dtolnay/rust-toolchain@nightly
        with:
          components: rust-src, llvm-tools-preview

      - name: Verify Rust components
        run: |
          rustc -Vv
          cargo -Vv
          rustup component list --installed
          echo "sysroot: $(rustc --print sysroot)"

      - name: Cache cargo
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: cargo-${{ runner.os }}-${{ hashFiles('**/Cargo.lock') }}


      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            qemu-system-x86 \
            qemu-utils \
            ovmf \
            mtools \
            dosfstools \
            xorriso \
            nasm \
            lld
          qemu-system-x86_64 --version || true
          qemu-img --version || true
          mcopy -V 2>/dev/null || true
          mkfs.fat -v 2>/dev/null || true
          ld --version | head -1 || true
          ld.lld --version | head -1 || true
          objcopy --version | head -1 || true
          $(rustc --print sysroot)/lib/rustlib/*/bin/llvm-objcopy --version || true

      - name: Prefetch dependencies
        run: cargo fetch

      - name: Build (UEFI only, warnings as errors)
        env:
          RUSTFLAGS: "-D warnings -A dead_code"
        run: cargo build --release --features testing --bin qemu-uefi --verbose

      - name: Ring3 smoke test (UEFI)
        env:
          RING3_TIMEOUT_SECONDS: "480"
          # Optionally point to DEBUG OVMF pair cached in the repo or runner
          # BREENIX_OVMF_CODE_PATH: ${{ github.workspace }}/third_party/ovmf/DEBUGX64_OVMF_CODE.fd
          # BREENIX_OVMF_VARS_PATH: ${{ github.workspace }}/third_party/ovmf/DEBUGX64_OVMF_VARS.fd
        run: |
          set -euxo pipefail
          # Fetch DEBUG OVMF pair (4 MiB) for decisive firmware logging (with fallback)
          mkdir -p third_party/ovmf
          set +e
          curl -fsSLo third_party/ovmf/OVMF_CODE.fd https://retrage.github.io/edk2-nightly/bin/DEBUGX64/OVMF_CODE.fd
          curl -fsSLo third_party/ovmf/OVMF_VARS.fd https://retrage.github.io/edk2-nightly/bin/DEBUGX64/OVMF_VARS.fd
          set -e
          if [[ ! -s third_party/ovmf/OVMF_CODE.fd || ! -s third_party/ovmf/OVMF_VARS.fd ]]; then
            echo "DEBUG OVMF download failed; falling back to distro 4M OVMF if available"
            if [[ -s /usr/share/OVMF/OVMF_CODE_4M.fd && -s /usr/share/OVMF/OVMF_VARS_4M.fd ]]; then
              ln -sf /usr/share/OVMF/OVMF_CODE_4M.fd third_party/ovmf/OVMF_CODE.fd
              ln -sf /usr/share/OVMF/OVMF_VARS_4M.fd third_party/ovmf/OVMF_VARS.fd
            else
              echo "ERROR: No DEBUG OVMF available and no distro 4M firmware found"; exit 1
            fi
          fi
          stat -c '%n %s' third_party/ovmf/OVMF_CODE.fd third_party/ovmf/OVMF_VARS.fd
          echo "DEBUG OVMF strings (sanity):"; (strings third_party/ovmf/OVMF_CODE.fd | grep -m1 -E 'DEBUG|RELEASE' || true)
          export BREENIX_OVMF_CODE_PATH="${{ github.workspace }}/third_party/ovmf/OVMF_CODE.fd"
          export BREENIX_OVMF_VARS_PATH="${{ github.workspace }}/third_party/ovmf/OVMF_VARS.fd"
          bash scripts/ci/ring3_check.sh uefi || {
            echo "ring3_check.sh failed; dumping qemu stderr if any";
            ls -l logs || true;
            exit 1;
          }

      - name: Upload logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: breenix-logs
          path: logs/*.log
          if-no-files-found: ignore
          retention-days: 7
